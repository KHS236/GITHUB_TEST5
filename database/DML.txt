DML 값 삽입



INSERT INTO 테이블명 (`user_id`, `user_password`, `user_name`) VALUES ('aaa', '111', '기몽섭');
(모든 컬럼에 데이터를 다 넣을 예정이라면 컬럼명 생략)

mysql> insert into tbl_user(user_id,user_password,user_name) values('a','1111','기몽섭');
Query OK, 1 row affected (0.02 sec)




------------------------------------------------------------------

값 수정

UPDATE `test1db`.`tbl_user` SET `user_password` = '1234', `user_name` = '김홍섭' WHERE (`user_id` = 'aaa');

업데이트 테이블명 셋 키 = 밸류 (바꿀 값) WHERE 조건절(키=값);
조건절에 맞는 행 안에서 키와 밸류 수정하겠다 라는 뜻


mysql> update tbl_user set user_name = '몽섭' WHERE user_id = 'b';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0
조건절이 없으면 모든 행을 다 바꿔버림



-----------------------------------------------------------------


값 삭제

워크벤치에서 조회한다음 행 왼쪽칸 누르면 다 선택 / 우클릭 딜리트하면 삭제


커맨드 라인
DELETE FROM `test1db`.`tbl_user` WHERE (`user_id` = 'aaa');
조건절 안 적으면 싹 다 삭제됨



mysql> delete from tbl_user where user_id = 'a';
Query OK, 1 row affected (0.01 sec)

mysql> select * from tbl_user;
+---------+---------------+-----------+
| user_id | user_password | user_name |
+---------+---------------+-----------+
| b       | 2222          | 몽섭      |
+---------+---------------+-----------+


--------------------------------------------------------------------------

값 조회

테이블 우클릭 셀렉트 로우






select 컬럼명,컬럼명 from 테이블명;
(모든 컬럼 확인은 * )


mysql> select * from tbl_user;
+---------+---------------+-----------+
| user_id | user_password | user_name |
+---------+---------------+-----------+
| a       | 1111          | 기몽섭    |
+---------+---------------+-----------+
1 row in set (0.00 sec)







---------------------------------------------------------------

예제


1. 값 추가 (INSERT)
다음 데이터를 tbl_product 테이블에 추가하세요.

prod_id	prod_name	prod_category	reg_date	prod_price	amount
1111	LG_GRAM_2023	가전		2024/01/22		830,000	100
1112	SAMSUNG_FLEX2	가전		2024/01/22		3,000,000	50
2000	대우_통돌이_01	가전		2024/01/22		590,000	25
3001	이것이리눅스다	도서		2023/01/22		30,000	1000


입력
mysql> insert into tbl_product(prod_id,prod_name,prod_category,reg_date,prod_price,amount) values('1111','LG_GRAM_2023','가전','2024/01/22','830,000','100');
Query OK, 1 row affected, 1 warning (0.01 sec)

mysql> insert into tbl_product values('1112','SAMSUNG_FLEX2','가전','2024/01/22','3,000,000','50');
Query OK, 1 row affected, 1 warning (0.01 sec)

mysql> insert into tbl_product values('2000','대우_통돌이_01','가전','2024/01/22','590,000','25');
Query OK, 1 row affected, 1 warning (0.01 sec)

mysql> insert into tbl_product values('3001','이것이리눅스다','도서','2024/01/22','30,000','1000');
Query OK, 1 row affected, 1 warning (0.02 sec)

결과
mysql> select * from tbl_product
    -> ;
+---------+----------------+---------------+---------------------+------------+--------+
| prod_id | prod_name      | prod_category | reg_date            | prod_price | amount |
+---------+----------------+---------------+---------------------+------------+--------+
|    1111 | LG_GRAM_2023   | 가전          | 2024-01-22 00:00:00 | 830,000    |    100 |
|    1112 | SAMSUNG_FLEX2  | 가전          | 2024-01-22 00:00:00 | 3,000,000  |     50 |
|    2000 | 대우_통돌이_01 | 가전          | 2024-01-22 00:00:00 | 590,000    |     25 |
|    3001 | 이것이리눅스다 | 도서          | 2024-01-22 00:00:00 | 30,000     |   1000 |
+---------+----------------+---------------+---------------------+------------+--------+




2. 값 수정 (UPDATE)
prod_category가 '가전'인 모든 행의 reg_date 값을 '2023/01/01'로 변경하세요.


mysql> update tbl_product set reg_date = '2023/01/01' where prod_category = '가전';
Query OK, 3 rows affected, 3 warnings (0.01 sec)
Rows matched: 3  Changed: 3  Warnings: 3

mysql> select * from tbl_product;
+---------+----------------+---------------+---------------------+------------+--------+
| prod_id | prod_name      | prod_category | reg_date            | prod_price | amount |
+---------+----------------+---------------+---------------------+------------+--------+
|    1111 | LG_GRAM_2023   | 가전          | 2023-01-01 00:00:00 | 830,000    |    100 |
|    1112 | SAMSUNG_FLEX2  | 가전          | 2023-01-01 00:00:00 | 3,000,000  |     50 |
|    2000 | 대우_통돌이_01 | 가전          | 2023-01-01 00:00:00 | 590,000    |     25 |
|    3001 | 이것이리눅스다 | 도서          | 2024-01-22 00:00:00 | 30,000     |   1000 |
+---------+----------------+---------------+---------------------+------------+--------+



3. 값 삭제 (DELETE)
prod_id가 1111인 행을 삭제하세요.


mysql> delete from tbl_product where prod_id = '1111';
Query OK, 1 row affected (0.01 sec)

mysql> select * from tbl_product;
+---------+----------------+---------------+---------------------+------------+--------+
| prod_id | prod_name      | prod_category | reg_date            | prod_price | amount |
+---------+----------------+---------------+---------------------+------------+--------+
|    1112 | SAMSUNG_FLEX2  | 가전          | 2023-01-01 00:00:00 | 3,000,000  |     50 |
|    2000 | 대우_통돌이_01 | 가전          | 2023-01-01 00:00:00 | 590,000    |     25 |
|    3001 | 이것이리눅스다 | 도서          | 2024-01-22 00:00:00 | 30,000     |   1000 |
+---------+----------------+---------------+---------------------+------------+--------+
3 rows in set (0.00 sec)



